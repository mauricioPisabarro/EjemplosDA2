              1
            /   \
            3    2
          /  \    \
        8    4     10
                  /
                12  

C++
/*
struct TreeNode {
  TreeNode* left;
  TreeNode* right;
  int val;

  TreeNode(int val) {
    this->val = val;
    this->left = NULL;
    this->right = NULL;
  }

  TreeNode(int val, TreeNode* l, TreeNode* r) {
    this->val = val;
    this->left = l;
    this->right = r;
  }
};

int main() {
  TreeNode* twelve = new TreeNode(12);
  TreeNode* ten = new TreeNode(10, twelve, NULL);

  TreeNode* two = new TreeNode(2, NULL, ten);

  TreeNode* eight = new TreeNode(8);
  TreeNode* four = new TreeNode(4);
  TreeNode* three = new TreeNode(3, eight, four);


  TreeNode* root = new TreeNode(1, three, two);

  return 1;
}

*/


Java
/*
public static class TreeNode {
    public TreeNode left;
    public TreeNode right;
    public int val;

    public TreeNode(int v) {
      val = v;
    }

    public TreeNode(int v, TreeNode l, TreeNode r) {
      val = v;
      left = l;
      right = r;
    }
  }

  public static void main(String[] args) {
    TreeNode twelve = new TreeNode(12);
    TreeNode ten = new TreeNode(10, twelve, null);
  
    TreeNode two = new TreeNode(2, null, ten);
  
    TreeNode eight = new TreeNode(8);
    TreeNode four = new TreeNode(4);
    TreeNode three = new TreeNode(3, eight, four);
  
  
    TreeNode root = new TreeNode(1, three, two);
  
  }
*/


Recorrida por niveles
1 
3 2 
8 4 10 
12 

Inorden
8 3 4 1 2 12 10 

Preorden
1 3 8 4 2 10 12

Reverse preorden
1 2 10 12 3 4 8

Postorder
8 4 3 12 10 2 1

Reverse PostOrder
12 10 2 4 8 3 1